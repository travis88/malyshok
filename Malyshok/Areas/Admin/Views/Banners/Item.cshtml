@model BannersViewModel

@if (Model.Item != null && Model.Item.Id != Guid.Empty)
{
    //string fileName = (Model.Item != null && Model.Item.Photo != null) ? Model.Item.Photo.Name : string.Empty;
    //string fileSize = (Model.Item != null && Model.Item.Photo != null) ? Model.Item.Photo.Size : string.Empty;
    string fileUrl = (Model.Item != null && Model.Item.Photo != null) ? Model.Item.Photo.Url : string.Empty;
    //string section = Request.Params["section"] != null ? Request.Params["section"] : Model.Item.Section.ToString(); Потенциально опасный код
    string section = (Model.Item != null && Model.Item.Section.HasValue) ? Model.Item.Section.ToString() : ViewBag.Section;

    if ((!Model.Item.Locked && Model.Item.Site == Model.DomainName) || Model.Account.Group.ToLower().Equals("developer") || Model.Account.Group.ToLower().Equals("administrator"))
    {
        <div class="content">
            <h1>@ViewBag.Title</h1>
            @Html.TextBoxFor(m => m.Item.Title, new { @title = "Название", @required = "" })

            @Html.TextBoxFor(m => m.Item.Photo.Url, new { type = "file",  data_posted_name = "upload", data_url = fileUrl, title = "Изображение", accept = ".jpg,.jpeg,.png,.gif" })

            @Html.TextAreaFor(m => m.Item.Text, new { type = "editor", title = "Текст", height = "300",data_dir= ViewBag.DataPath })
            @Html.TextBoxFor(m => m.Item.Url, new { type = "text", title = "Ссылка", placeholder = "http://", MaxLength = "128" })
            @Html.Hidden("Item.Section", section)

            @*
                Если баннер сохранен в базе, то у нее гарантированно есть Section
                Нельзя добавить связи к несуществующей записи.
            *@
            @if (Model.Item != null && Model.Item.Section.HasValue)
            {
                if ((Model.Account.Group.ToLower().Equals("developer") || Model.Account.Group.ToLower().Equals("administrator"))) //@if (@*item.Locked ||*@ item.Site != Model.DomainName)
                {
                    <div class="group-block open topIndent-20" title="Привязка к сайтам">
                        <div class="row">
                            <div class="col-lg-12">
                                <ul id="model-linksToSite-ul">
                                    @if (Model.Item != null && Model.Item.Links != null && Model.Item.Links.Sites != null)
                                    {
                                        foreach (var site in Model.Item.Links.Sites)
                                        {
                                            <li id="site_@site.Id" class="icon-location-5">
                                                <a href="@site.Adress" target="_blank"> @site.Title</a>
                                            </li>
                                        }
                                    }

                                </ul>
                            </div>

                            <div class="col-lg-offset-9 col-lg-3">
                                @Html.ActionLink("Привязать", "siteListModal", "sites", new { @objId = Model.Item.Id, @objType = ContentType.BANNER }, new { @id = "LogLists", @class = "button pop-up_frame icon-location-5", @data_class = "LogList", @title = "Организации для размещения" })
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info topIndent-20">
                    <p><span class="icon-info"></span> Привязка к другим объектам доступна только после сохранения записи.</p>
                </div>
            }
        </div>
    }
    else
    {
        <div class="content">
            <div class="alert alert-danger">
                <strong>У вас недостаточно прав!</strong>
                <p>Возможно запись была заблокирована администратором портала.</p>
            </div>
        </div>
    }
}
else
{
    <div class="content">
        <div class="alert alert-danger">
            <strong>Ошибка!</strong>
            <p>Не действительный Id записи.</p>
        </div>
    </div>
}

<div class="dop_info-block">
    <div class="dop-caption">Настройки</div>
    @Html.TextBoxFor(m => m.Item.Date, new { required = "", data_type = "datetime", title = "Дата публикации", value = ViewBag.Date })
    @Html.CheckBoxFor(m => m.Item.Disabled, new { type = "checkbox", title = "Запретить просмотр", data_toggle = "toggle", data_on = "запретить просмотр", data_onstyle = "danger", data_off = "показывать на сайте", data_offstyle = "success", data_width = "248" })

    @if (Model.Account.Group.ToLower().Equals("developer") || Model.Account.Group.ToLower().Equals("administrator"))
    {
        @Html.CheckBoxFor(m => m.Item.Locked, new { type = "checkbox", title = "Запретить редактирование", data_toggle = "toggle", data_on = "запретить редактирование", data_onstyle = "danger", data_off = "разрешить редактирование", data_offstyle = "success", data_width = "248" })
    }

    @if (Model.Item != null)
    {
        <div class="topIndent-20">
            @Html.ActionLink("Журнал изменений", "log", "services", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Журнал изменений" })
        </div>
        <div class="topIndent-20 alert alert-info">Количество переходов: <strong>@Model.Item.CountClick</strong></div>
    }
</div>

<div class="buttons">
    @if ((Model.Item != null && Model.UserResolution.Change) || (Model.Item == null && Model.UserResolution.Write))
    {
        <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
    }
    @if (Model.Item != null && Model.UserResolution.Delete)
    {
        if (Model.Item.Section.HasValue)
        {
            <button type="submit" name="action" data-action="delete" value="delete-btn" class="button icon-delete">Удалить</button>
        }
    }
    <button type="submit" name="action" data-action="cancel" value="cancel-btn" class="button icon-cancel">Назад</button>
</div>