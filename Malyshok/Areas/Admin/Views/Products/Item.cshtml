@model ProductViewModel
@{
    string fileUrl = Model.Item.Photo;
    if (!File.Exists(Server.MapPath(fileUrl)))
    {
        fileUrl = "/Content/img/nophoto.jpg";
    }
}

@if (Model.Item != null && Model.Item.Id != Guid.Empty)
{
    if (Model.UserResolution.Read)
    {
        <div class="content">
            <h1>@ViewBag.Title</h1>
            <div class="row">
                <div class="col-lg-12">@Html.TextBoxFor(m => m.Item.Title, new { required = "", type = "text", maxlength = "128", title = "Название" })</div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    @*@Html.TextBoxFor(m => m.Item.Photo, new { type = "file", data_posted_name = "upload", data_url = fileUrl, title = "Картинка для предпросмотра", data_help = "Размер фотографии должен быть не менне 400 точек по ширине и пропорции картинки - 4х3", accept = ".jpg,.jpeg,.png,.gif" })*@
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    @Html.TextAreaFor(m => m.Item.Description, new { type = "editor", title = "Описание", height = "300", data_dir = ViewBag.DataPath })
                </div>
            </div>
        </div>

        <div class="dop_info-block">
            <div class="dop-caption">Настройки</div>
            <div class="preview_img">
                <img src="@fileUrl" title="@Model.Item.Title" />
            </div>
            @Html.TextBoxFor(m => m.Item.Date, new { required = "", data_type = "datetime", title = "Дата", value = ViewBag.Date })
            @Html.TextBoxFor(m => m.Item.Standart, new { required = "", type = "text", maxlength = "128", title = "Стандарт" })
            @Html.TextBoxFor(m => m.Item.Code, new { required = "", type = "text", maxlength = "128", title = "Код" })
            @Html.TextBoxFor(m => m.Item.Barcode, new { required = "", type = "text", maxlength = "128", title = "Штрих-код" })
            @Html.TextBoxFor(m => m.Item.Count, new { required = "", type = "number", maxlength = "128", title = "Кол-во" })
            @Html.TextBoxFor(m => m.Item.Price, new { required = "", type = "text", maxlength = "128", title = "Цена", value = Model.Item != null ? Model.Item.Price.ToString("0.##") : "0.00" })

            <div class="form-group">
                <label for="itemGroups-select">Категории продукции:</label>
                <select name="Item.Categories" id="itemGroups-select" class="form-control select2" multiple>
                    @if (Model.Item != null)
            {
                foreach (var category in Model.Categories)
                {
                    <option value="@category.Id" @(Model.Item != null && Model.Item.Categories != null && Model.Item.Categories.Any(s => s.Id.Equals(category.Id)) ? "selected" : null)>@category.Title</option>
        }
    }
                </select>
            </div>
            <div class="group-block open topIndent-20" title="Мета теги">
                @Html.TextAreaFor(m => m.Item.Keyword, new { type = "text", title = "Ключевые слова", data_help = "Данный тег используется при создании краткого описания страницы, используется поисковыми системами для индексации, а также при создании аннотации в выдаче по запросу. При отсутствии тега поисковые системы выдают в аннотации первую строку документа или отрывок, содержащий ключевые слова." })
            </div>

            @Html.ActionLink("Журнал изменений", "log", "services", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Журнал изменений" })

        </div>
    }
    else
    {
        <div class="content">
            <div class="alert alert-danger">
                <strong>У вас недостаточно прав!</strong>
                <p>Возможно запись была заблокирована администратором портала.</p>
            </div>
        </div>
    }
}
else
{
    <div class="content">
        <div class="alert alert-danger">
            <strong>Ошибка!</strong>
            <p>Не действительный Id записи.</p>
        </div>
    </div>
}

<div class="buttons">
    @if ((Model.Item != null && Model.UserResolution.Change) || (Model.Item == null && Model.UserResolution.Write))
    {
        <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
    }
    @if (Model.Item != null && Model.UserResolution.Delete)
    {
        if (!string.IsNullOrEmpty(Model.Item.Title))
        {
            <button type="submit" name="action" data-action="delete" value="delete-btn" class="button icon-delete">Удалить</button>
        }
    }
    <button type="submit" name="action" data-action="cancel" value="cancel-btn" class="button icon-cancel">Закрыть</button>
</div>