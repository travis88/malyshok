@model SitesViewModel

@{
    string logoName = (Model.Item != null && Model.Item.Logo != null) ? Model.Item.Logo.Name : string.Empty;
    string logoSize = (Model.Item != null && Model.Item.Logo != null) ? Model.Item.Logo.Size : string.Empty;
    string logoUrl = (Model.Item != null && Model.Item.Logo != null) ? Model.Item.Logo.Url : string.Empty;

    string backgroundName = (Model.Item != null && Model.Item.BackGroundImg != null) ? Model.Item.BackGroundImg.Name : string.Empty;
    string backgroundSize = (Model.Item != null && Model.Item.BackGroundImg != null) ? Model.Item.BackGroundImg.Size : string.Empty;
    string backgroundUrl = (Model.Item != null && Model.Item.BackGroundImg != null) ? Model.Item.BackGroundImg.Url : string.Empty;
}

<div class="content">
    <h1>@ViewBag.Title</h1>
    @Html.TextBoxFor(m => m.Item.LongTitle, new { @title = "Название" })
    @Html.TextBoxFor(m => m.Item.Title, new { @title = "Краткое название", @required = "" })
   
    <div class="group-block open topIndent-20" title="Пользовательские скрипты">
        @Html.TextAreaFor(m => m.Item.Scripts, new { @type = "text", @height = "300" ,@rows="15"})
    </div>
    @Html.HiddenFor(m => m.Item.Id)
</div>

<div class="dop_info-block">
    @Html.HiddenFor(m => m.Item.Alias)
    @Html.DropDownListFor(m => m.Item.Theme, new SelectList(Model.Themes, "Value", "Text", "blue"), new { @title = "Выбор тем", @class = "selectpicker" })
    @Html.TextBoxFor(m => m.Item.Site, new { @title = "Ссылка" })

    @*@Html.TextBox("upload", null, new { type = "file", title = "Логотип:", data_name = logoName, data_size = logoSize, data_url = logoUrl, accept = ".jpg,.jpeg,.png,.gif" })
    @Html.TextBoxFor(m => m.Item.Logo.Url, new { type = "hidden", value = logoUrl })*@

    @Html.TextBoxFor(m => m.Item.Logo.Url, new { type = "file", data_posted_name = "upload", data_url = logoUrl, title = "Картинка для предпросмотра", accept = ".jpg,.jpeg,.png,.gif" })

    @*@Html.TextBox("uploadBack", null, new { type = "file", title = "Изображение под слайдером:", data_name = backgroundName, data_size = backgroundSize, data_url = backgroundUrl, accept = ".jpg,.jpeg,.png,.gif" })
    @Html.TextBoxFor(m => m.Item.BackGroundImg.Url, new { type = "hidden", value = backgroundUrl })*@

    @Html.TextBoxFor(m => m.Item.BackGroundImg.Url, new { type = "file", data_posted_name = "uploadBack", data_url = backgroundUrl, title = "Изображение под слайдером", accept = ".jpg,.jpeg,.png,.gif" })

    <div class="group-block" title="Социальные сети">
        @Html.TextBoxFor(m => m.Item.Facebook, new { @title = "Facebook" })
        @Html.TextBoxFor(m => m.Item.Vk, new { @title = "Вконтакте" })
        @Html.TextBoxFor(m => m.Item.Instagramm, new { @title = "Instagramm" })
        @Html.TextBoxFor(m => m.Item.Odnoklassniki, new { @title = "Одноклассники" })
        @Html.TextBoxFor(m => m.Item.Twitter, new { @title = "Twitter" })
    </div>
    @if (Model.Item != null)
    {
        @Html.ActionLink("Журнал изменений", "log", "services", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Журнал изменений" })
    }
</div>

<div class="buttons">
    @if ((Model.Item != null && Model.UserResolution.Change) || (Model.Item == null && Model.UserResolution.Write))
    {
        <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
    }
</div>
