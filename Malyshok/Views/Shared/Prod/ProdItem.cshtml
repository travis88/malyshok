@model ProductModel[]

<div>
    @foreach (var item in Model)
    {
        var ProdImg = item.Photo != null ? Settings.ProdContent + item.Barcode + "/" + item.Photo.Replace(".jpg", "_mini.jpg") : "";
        var bigImg = Settings.ProdContent + item.Barcode + "/" + item.Photo;
        ProdImg = File.Exists(Server.MapPath(ProdImg)) ? ProdImg : "";
        var split = "";
        var isNew = item.Date > DateTime.Now.AddDays(-14);

        <div class="item_prod shadow-block">
            <div class="mobile-prod_title">
                <div class="prod-title">
                    <a href="/prod/@item.Id/">@Html.Raw(item.Title.Replace(",", ", "))</a>
                </div>
                <div class="prod-catalog-link">
                    @if (item.CatalogPath != null)
                    {
                        <div>
                            @foreach (var catalog in item.CatalogPath)
                            {
                                var Link = "/catalog" + catalog.link;
                                @split <a href="@Link">@catalog.text</a>
                                split = " / ";
                            }
                        </div>
                    }
                </div>
            </div>
            <div class="prod-img">
                @if (!String.IsNullOrEmpty(ProdImg))
                {
                    <span class="loop"></span>
                    <a class="image-gallery" title="@Html.Raw(item.Title.Replace(",", ", ")) (@item.Barcode)" href="@bigImg"><img src="@ProdImg" /></a>
                }
                @if (isNew)
                {
                    <a class="nameplate-new" href="/Novelties">
                        <svg viewBox="0 0 50 30" width="100%" height="100%">
                            <polygon fill="#DB0029" points="50,0 0,0 0,20 50,20 45,10 "></polygon>
                            <polygon fill="#991313" points="5,20 0,20 5,30 "></polygon>
                            <g>
                                <path fill="#ffffff" d="M16.3,15h-1.4L9.5,8.2V15H7.9V5.2h1.4l5.4,6.8V5.2h1.6V15z"></path>
                                <path fill="#ffffff" d="M19,15V5.2h5.7v1.6h-3.9v2.4h3.5v1.6h-3.5v2.5h4.1V15H19z"></path>
                                <path fill="#ffffff" d="M39.4,5.2L36.6,15H35l-2.4-7.1L30.3,15h-1.6l-2.9-9.8h1.9l2,7l2.2-7h1.7l2.2,7l2-7H39.4z"></path>
                            </g>
                        </svg>
                    </a>
                }
            </div>
            <div class="prod-info">
                <div class="pc-prod_title">
                    <div class="prod-title">
                        <a href="/prod/@item.Id/">@Html.Raw(item.Title.Replace(",", ", "))</a>
                    </div>
                    <div class="prod-catalog-link">
                        @if (item.CatalogPath != null)
                        {
                            split = "";
                            <div>
                                @foreach (var catalog in item.CatalogPath)
                                {
                                    var Link = "/catalog" + catalog.link;
                                    @split <a href="@Link">@catalog.text</a>
                                    split = " / ";
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="prod-params col-xs-6">
                        <div><span>Код</span> @item.Code</div>
                        <div><span>Штрих-код</span> @item.Barcode</div>
                    </div>
                    <div class="prod-params col-xs-6">
                        <div><span>Стандарт</span> @item.Standart</div>
                        <div>
                            <span>Остаток</span>
                            @if (item.Count > 0)
                            {@Html.Raw("есть в наличии") }
                        else
                        { @Html.Raw("нет в наличии")}
                        </div>
                    </div>
                </div>
                <div class="prod-basket-block">
                    <div class="prod-price"><span>Цена</span><b>@item.Price.ToString("# ###.00#")</b> руб.</div>
                    <div class="prod-cert">
                        Сертификаты
                    </div>
                    <div class="basket-form">
                        @{
                            var count = item.inBasket;
                            string inputVal = (item.inBasket > 0) ? item.inBasket.ToString() : "";
                            string btnStyle = (item.inBasket > 0) ? "btn-invers" : "btn-blue";
                            string btnName = (item.inBasket > 0) ? "В корзине" : "В корзину";
                        }
                        <input data-id="@item.Id" value="@inputVal" /> шт.
                        <button type="button" class="in-basket @btnStyle">@btnName</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>